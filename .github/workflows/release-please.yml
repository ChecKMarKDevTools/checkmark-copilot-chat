name: 🍾 Release Please

on:
  workflow_dispatch:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  id-token: write
  attestations: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: ✅ Checkout Code
        uses: actions/checkout@v4

      - name: ⚙️ Get Volta Node Version
        id: get-volta-node
        run: |
          version=$(jq -r .volta.node package.json)
          echo "node-version=$version" >> $GITHUB_OUTPUT

      - name: 🤖 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.get-volta-node.outputs.node-version }}

      - name: 📥 Install Dependencies
        run: npm install

      - name: 🏗️ Build Project
        run: npm run build

      - name: 🧪 Run Tests
        run: npm test

      - name: 🚀 Create Release
        id: release
        uses: googleapis/release-please-action@v4.2.0
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

      - name: 📦 Package Artifact
        run: |
          mkdir -p artifact
          git archive -o artifact/release-artifact.zip HEAD

      - name: 🔏 Calculate SHA256 digest
        id: digest
        run: |
          # compute SHA-256 for the release artifact
          digest=$(sha256sum artifact/release-artifact.zip | cut -d' ' -f1)
          echo "artifact-digest=$digest" >> $GITHUB_OUTPUT

      - name: 📤 Upload Release Artifact
        id: upload
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} artifact/release-artifact.zip

      - name: ✍️ Generate Attestation
        id: attestation
        if: ${{ steps.upload.outcome == 'success' }}
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: release-artifact.zip
          subject-digest: sha256:${{ steps.digest.outputs.artifact-digest }}

      - name: 📝 Report Release Status
        if: always()
        run: |
          # Output release status and tag to the Actions summary
          if [ "${{ steps.release.outputs.release_created }}" == "true" ]; then
            echo "🎉 Release created: ${{ steps.release.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "🤔 No new release created. Proposed tag: ${{ steps.release.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          fi
